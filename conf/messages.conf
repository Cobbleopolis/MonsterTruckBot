index {
  welcome = "Hello, World!"
}

dashboard {
  filter = "Filter"
  settingsSaved = "{0} settings saved successfully!"
  coreSettings = "Core Settings"
  forms {
    filters {
      title = "Filter Settings"
      capsFilter {
        title = "Caps Filter"
        enabled {
          label = "Caps Filter Enabled"
        }
        exemptionLevel {
          label = "Caps Filter Exemption Level"
          help = "Users with this permission level (and above) will be exempt from the caps filter."
        }
        threshold {
          label = "Caps Filter Threshold"
          help = "The amount of consecutive caps that will trigger the bot to delete."
        }
      }
      linksFilter {
        title = "Links Filter"
        enabled {
          label = "Links Filter Enabled"
        }
        exemptionLevel {
          label = "Links Filter Exemption Level"
          help = "Users with this permission level (and above) will be exempt from the links filter."
        }
      }
      blacklistFilter {
        title = "Blacklisted Words Filter"
        enabled {
          label = "Blacklisted Words Filter Enabled"
        }
        exemptionLevel {
          label = "Blacklisted Words Filter Exemption Level"
          help = "Users with this permission level (and above) will be exempt from the backlisted words filter."
        }
        words {
          label = "Blacklisted Words"
          help = "One word/phrase per line. You can also use java-flavored regex to blacklist words/phrases."
        }
      }
    }
    customCommands {
      title = "Custom Commands"
      newCommand {
        title = "New Command"
        saved = "New command successfully saved."
        commandName {
          label = "Command Name"
          placeholder = "customcommand"
        }
        commandContent {
          label = "Command Content"
          placeholder = "message"
        }
        permissionLevel {
          label = "Permission Level"
          help = "Users with this permission level (and above) will be able to call this command"
        }
        errors {
          commandExists = "That command already exists."
        }
      }
      editCommand {
        title = "Custom Commands"
        saved = "Command {0}{1} has successfully been updated."
        commandName {
          label = "Command Name"
        }
        commandContent {
          label = "Command Content"
        }
        permissionLevel {
          label = "Permission Level"
        }
        actions{
          label = "Actions"
        }
      }
      deleteCommand {
        commandDeleted = "Command {0}{1} has successfully been deleted."
        errorDeleting = "There was an error while deleting command {0}{1}."
      }
    }
    bitTracking {
      title = "Bit Tracking"
      saved = "Bit tracking data was saved."
      modes {
        none = "None"
        nip_dip = "Nip Dip"
        rbg = "RBG (NYI)"
        jackshots = "Jackshots (NYI)"
        push_up = "Push Ups (NYI)"
        sing_it_or_slam_it = "Sing It or Slam It (NYI)"
      }
      currentMode {
        label = "Current Mode"
      }
      variables = "Variables: {0}"
      nipDip {
        template {
          label = "Nip Dip Template"
        }
      }
      goalAmount {
        label = "Goal Amount"
      }
      toNextGoal {
        label = "To Next Goal"
      }
      goalCount {
        label = "Goal Count"
      }
    }
  }
}

auth {
  twitch {
    oAuthToken{
      header = "Your OAuth Token"
      instructions = "Please give the token or error to Cobble. Especcialy if there''s an error. Please. I beg of you."
    }
  }
}

bot {
  ping = "pong!"
  help {
    descriptions {
      mthelp = "Provides a list of commands."
      ping = "A simple command to ping the bot to make sure it is alive."
      version = "This will display the version of the bot in the channel that called it."
      sos = "Quickly notifies the moderators on the server."
    }
    general {
      prefix = "Commands:\n"
      customCommandPrefix = "Custom Commands:\n"
      commandFormat = "\t\u2022 `{0}` - {1}\n"
      suffix = "Use `{0}` to get specific command help."
    }
  }
  sos {
    message = "{0} just sent an SOS from {1}\n\t**SOS Message:** {2}"
    send {
      success = "SOS successfully sent to the moderators."
      failure = "There was an issue sending your sos message to the moderators."
      notDM = "You can not send an SOS from a direct message."
    }
  }
  filter {
    noCaps {
      message = "Please don''t spam caps. We''ve been over this..."
      reason = "Spamming caps in chat"
    }
    noLinks {
      message = "Please don''t post links in chat..."
      reason = "Posting links in chat"
    }
    blacklistedWord {
      message = "Please don''t put bad words in the chat..."
      reason = "Using blacklisted words/phrases in chat"
    }
  }
  count {
    default = "There are currently {0} subscribers."
    error = "There was an error retrieving the sub count. Please give this error to the mods: {0}"
  }
  bitTracking {
    commandFormat = "{0}/{1} bits to the next shot! {2} shots taken by Jeremy"
    noCurrentBitTracking = "No bit tracking mode is currently set."
    unknownBitTrackingMode = "Unknown Bit Tracking mode. Please make sure the mods are aware of this."
    settingsNotFound = "Bit tracking settings were not found in the database. I don't know how you called this..."
    event {
      nip_dip = "Time to take a trip to the Nip Dip! AND DRINK SOME WATER!"
    }
  }
  commandMessageTooLong = "This command''s content is too long. Please ask the mods to edit the command."
}

global {
  pages = "Pages"
  pageNames {
    dashboard = "Dashboard"
    twitchAuthentication = "Twitch Authentication"
  }
  forms {
    submit = "Submit"
    cancel = "Cancel"
    save = "Save"
    edit = "Edit"
    delete = "Delete"
  }
  auth {
    login = "Login"
    logout = "Logout"
  }
  notAvailable = "N/A"
  notYetImplemented = "Not Yet Implemented"
  permissionLevels {
    everyone = "Everyone"
    subscribers = "Subscribers"
    moderators = "Moderators"
    owner = "Owner/Streamer"
  }
}

error {
  ohSnap = "Oh Snap!"
  type = "Error type"
  description: "Error description"
  auth {
    notAuthorized {
      page = "Not Authorized"
      message = "You are not authorized to access this page."
    }
    twitch {
      unableToGetOAuth = "There was an error getting your OAuth token."
    }
  }
  twitch {
    channelDoesNotExist = "This channel does not exist in the config. I don''t know how you called this..."
  }
  formSubmission = "There was an error submitting your request. Please correct the errors and resubmit."
}